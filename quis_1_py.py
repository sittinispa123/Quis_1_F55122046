# -*- coding: utf-8 -*-
"""Quis 1.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19b_OF0pZ2T9g0LtQRyfrWVPu8Z-pZpw1
"""

class MatrixOperations:
    def __init__(self, matrix):
        self.matrix = matrix

    def find_min_max(self):
        min_value = min(min(row) for row in self.matrix)
        max_value = max(max(row) for row in self.matrix)
        return min_value, max_value

    def transpose(self):
        transposed_matrix = [[self.matrix[j][i] for j in range(len(self.matrix))] for i in range(len(self.matrix[0]))]
        return transposed_matrix

    def multiply(self, other_matrix):
        if len(self.matrix[0]) != len(other_matrix):
            raise ValueError("The number of columns in the first matrix must be equal to the number of rows in the second matrix.")

        result = [[0] * len(other_matrix[0]) for _ in range(len(self.matrix))]
        for i in range(len(self.matrix)):
            for j in range(len(other_matrix[0])):
                for k in range(len(other_matrix)):
                    result[i][j] += self.matrix[i][k] * other_matrix[k][j]
        return result

    def add(self, other_matrix):
        if len(self.matrix) != len(other_matrix) or len(self.matrix[0]) != len(other_matrix[0]):
            raise ValueError("The dimensions of the two matrices must be the same.")

        result = [[self.matrix[i][j] + other_matrix[i][j] for j in range(len(self.matrix[0]))] for i in range(len(self.matrix))]
        return result


if __name__ == "__main__":
    matrix_a = [
        [34, 100, 12],
        [72, 24, 55],
        [61, 20, 19]
    ]

    matrix_op = MatrixOperations(matrix_a)

    # Menghitung elemen terbesar dan terkecil
    min_value, max_value = matrix_op.find_min_max()
    print(f"Elemen terkecil: {min_value}")
    print(f"Elemen terbesar: {max_value}")

    # Transpose matrix
    transposed_matrix = matrix_op.transpose()
    print("Transposed matrix:")
    for row in transposed_matrix:
        print(row)

    # Menghitung perkalian matrix (A) dan (T)
    matrix_b = matrix_op.transpose()
    product_matrix = matrix_op.multiply(matrix_b)
    print("Hasil perkalian matrix:")
    for row in product_matrix:
        print(row)

    # Menghitung penjumlahan matrix (T) dan (A)
    sum_matrix = matrix_op.add(matrix_b)
    print("Hasil penjumlahan matrix:")
    for row in sum_matrix:
        print(row)